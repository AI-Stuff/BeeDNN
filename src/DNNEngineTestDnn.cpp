#include "DNNEngineTestDnn.h"

#include "Net.h"
#include "ActivationLayer.h"

//////////////////////////////////////////////////////////////////////////////
DNNEngineTestDnn::DNNEngineTestDnn()
{
	_pNet=new Net;
}
//////////////////////////////////////////////////////////////////////////////
DNNEngineTestDnn::~DNNEngineTestDnn()
{
    clear();
}
//////////////////////////////////////////////////////////////////////////////
void DNNEngineTestDnn::clear()
{ }
//////////////////////////////////////////////////////////////////////////////
void DNNEngineTestDnn::add_layer_and_activation(int inSize,int outSize, eLayerType layer, string sActivation)
{
    (void)layer;
    _pNet->add(new ActivationLayer(inSize,outSize,sActivation));
}
//////////////////////////////////////////////////////////////////////////////
void DNNEngineTestDnn::predict(const MatrixFloat& mIn, MatrixFloat& mOut)
{
   _pNet->forward(mIn,mOut);
}
//////////////////////////////////////////////////////////////////////////////

